
/*
  Call when creating. like a constructor but gs2 version

  @param {string} cName - Name of collection. should match var name
  @param {TDiscord} superObj - Bot
  @return {TCollection} - this
*/
public function init(temp.cName, temp.superObj) {
  // should be private but uknow. graal probs
  this._super = temp.superObj;
  this._cName = temp.cName;
  return this;
}

/*
  @param {string} key
  @return {*} value of given key
*/
public function get(temp.key) {
  return this.(@ temp.key);
}

/*
  @param {string} key
  @return {boolean} key exist or not
*/
public function has(temp.key) {
  return isObject(this.(@ temp.key));
}

/*
  @param {string} prop
  @param {*} value
  @return {Object}
*/
public function find(temp.prop, temp.value) {
  for (temp.item : this._super.(@ this._cName))
    if (temp.item.(@ temp.prop) == temp.value)
      return temp.item;
  return this;
}

/*
  If collection is empty

  @return {boolean} - empty?
*/
public function isEmpty() {
  return (this.size() <= 0);
}


/*
  In progress area
*/

public function forEach(temp.func) {
  for (temp.item : this._super.(@ this._cName)) {
    echo(temp.item);
    temp.func(@ temp.item, temp.item, this._super.(@ this._cName));
  }
}

public function filter(temp.func) {
  if (temp.func.objectType() != "TScriptFunction") {
    return false;
  }

  temp.results = "";
  
  for (temp.i = 0; temp.i < this.size(); temp.i ++) {
    if (temp.func(this[i]) == true) {
      temp.results.add(this[i]);
    }
  }

  return temp.results;
}
